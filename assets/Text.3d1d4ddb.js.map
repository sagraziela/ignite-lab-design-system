{"version":3,"file":"Text.3d1d4ddb.js","sources":["../../src/components/Text.tsx"],"sourcesContent":["import { Slot } from '@radix-ui/react-slot';\nimport { clsx } from 'clsx';\nimport { ReactNode } from 'react';\n\nexport interface TextProps {\n    size?: 'sm' | 'md' | 'lg';\n    children: ReactNode; //Qqr coisa dentro do React válida como children.\n    asChild?: boolean;\n    className?: string;\n}\n\nexport function Text({ size = 'md', children, asChild = false, className }: TextProps) {\n\n    const Comp = asChild ? Slot : 'span';\n    //o slot pega todas as propriedades aplicadas ao Comp e as transfere para o 1º componente que vem dentro do children.\n\n    return(\n        <Comp \n        className={clsx(\n            'text-gray-100 font-sans',\n            {\n                'text-xs': size === 'sm', \n                'text-sm': size === 'md',\n                'text-md': size === 'lg', //aplica o font-size global 'text-md' se o size da TextProps for igual a 'lg'.\n            },\n            className\n        )}\n        >\n            {children}\n        </Comp>\n    )\n}"],"names":["Text","size","children","className","_jsx","asChild","Slot","clsx","__name"],"mappings":"qNAWO,SAAAA,EAAA,CAAc,KAAAC,EAAA,KAAS,SAAAC,EAAMA,QAAAA,EAAAA,GAAoB,UAAAC,CAA4B,EAAA,CAKhF,OAAAC,EAHAC,EAAAC,EAAA,OAGA,CACS,UAAAC,EAAA,0BAAA,CAGD,UAAAN,IAAA,KACwB,UAAAA,IAAA,KACA,UAAAA,IAAA,IACA,EAAAE,CAAA,EAEf,SAAAD,CACX,CAAA,CAKV,CApBOM,EAAAR,EAAA"}